-- Generated by Oracle SQL Developer Data Modeler 20.2.0.167.1538
--   at:        2020-12-16 18:35:48 EET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE camere (
    id_camera    NUMBER(4) NOT NULL,
    nr_camera    VARCHAR2(8) NOT NULL,
    nr_studenti  NUMBER(1) NOT NULL,
    tarif        NUMBER(3) NOT NULL,
    tip_camera   VARCHAR2(15) NOT NULL,
    tip_baie     VARCHAR2(15) NOT NULL,
    status       VARCHAR2(20) NOT NULL,
    id_camin     NUMBER(2) NOT NULL
)
LOGGING;

ALTER TABLE camere
    ADD CONSTRAINT camere_nr_studenti_ck CHECK ( nr_studenti BETWEEN 1 AND 4 );

ALTER TABLE camere
    ADD CONSTRAINT camere_tarif_ck CHECK ( tarif IN ( 0, 120, 130, 135, 150,
                                                      200, 270 ) );

ALTER TABLE camere
    ADD CONSTRAINT camere_tip_camera_ck CHECK ( tip_camera IN ( 'Cvadubla', 'Dubla', 'Garsoniera', 'Oficiu', 'Single',
                                                                'Tripla' ) );

ALTER TABLE camere
    ADD CONSTRAINT camere_tip_baie_ck CHECK ( tip_baie IN ( 'Comuna', 'Modul', 'Proprie' ) );

ALTER TABLE camere
    ADD CONSTRAINT camere_status_ck CHECK ( status IN ( 'Libera', 'Ocupata partial', 'Ocupata total' ) );

ALTER TABLE camere ADD CONSTRAINT camere_pk PRIMARY KEY ( id_camera );

ALTER TABLE camere ADD CONSTRAINT camere_nr_camera_id_camin_uk UNIQUE ( nr_camera,
                                                                        id_camin );

CREATE TABLE camine (
    id_camin           NUMBER(2) NOT NULL,
    nume_camin         VARCHAR2(3) NOT NULL,
    nr_camere          NUMBER(3) NOT NULL,
    nr_etaje           NUMBER(1) NOT NULL,
    capacitate_camere  NUMBER(1) NOT NULL,
    bucatarie          VARCHAR2(2) NOT NULL,
    id_conducere       NUMBER(4) NOT NULL
)
LOGGING;

ALTER TABLE camine
    ADD CONSTRAINT camine_nr_camere_ck CHECK ( nr_camere BETWEEN 1 AND 300 );

ALTER TABLE camine
    ADD CONSTRAINT camine_nr_etaje_ck CHECK ( nr_etaje BETWEEN 1 AND 9 );

ALTER TABLE camine
    ADD CONSTRAINT camine_capacitate_camere_ck CHECK ( capacitate_camere BETWEEN 1 AND 4 );

ALTER TABLE camine
    ADD CONSTRAINT camine_bucatarie_ck CHECK ( bucatarie IN ( 'Da', 'Nu' ) );

CREATE UNIQUE INDEX camine__idx ON
    camine (
        id_conducere
    ASC )
        LOGGING;

ALTER TABLE camine ADD CONSTRAINT camine_pk PRIMARY KEY ( id_camin );

ALTER TABLE camine ADD CONSTRAINT camine_nume_camin_uk UNIQUE ( nume_camin );

CREATE TABLE conducere (
    id_conducere        NUMBER(4) NOT NULL,
    nume_prodecan       VARCHAR2(30) NOT NULL,
    nume_administrator  VARCHAR2(30) NOT NULL,
    nume_presedinte     VARCHAR2(30) NOT NULL
)
LOGGING;

ALTER TABLE conducere
    ADD CONSTRAINT conducere_nume_prodecan_ck CHECK ( REGEXP_LIKE ( nume_prodecan,
                                                                    '^[a-zA-Z .''-]+$' ) );

ALTER TABLE conducere
    ADD CONSTRAINT conducere_nume_admin_ck CHECK ( REGEXP_LIKE ( nume_administrator,
                                                                 '^[a-zA-Z .''-]+$' ) );

ALTER TABLE conducere
    ADD CONSTRAINT conducere_nume_presedite_ck CHECK ( REGEXP_LIKE ( nume_presedinte,
                                                                     '^[a-zA-Z .''-]+$' ) );

ALTER TABLE conducere ADD CONSTRAINT conducere_pk PRIMARY KEY ( id_conducere );

ALTER TABLE conducere ADD CONSTRAINT conducere_nume_presedinte_uk UNIQUE ( nume_presedinte );

CREATE TABLE date_studenti (
    cnp               CHAR(13) NOT NULL,
    seria_ci          CHAR(2) NOT NULL,
    nr_ci             CHAR(6) NOT NULL,
    adresa_domiciliu  VARCHAR2(50) NOT NULL,
    id_student        NUMBER(4) NOT NULL
)
LOGGING;

ALTER TABLE date_studenti
    ADD CONSTRAINT date_studenti_cnp_ck CHECK ( REGEXP_LIKE ( cnp,
                                                              '(1|2|5|6)\d{2}(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])(0[1-9]|[1-4]\d|5[0-2]|99)\d{4}' ) );

ALTER TABLE date_studenti
    ADD CONSTRAINT date_studenti_seria_ci_ck CHECK ( REGEXP_LIKE ( seria_ci,
                                                                   '^[a-zA-Z .''-]+$' ) );

ALTER TABLE date_studenti
    ADD CONSTRAINT date_studenti_nr_ci_ck CHECK ( REGEXP_LIKE ( nr_ci,
                                                                '[0-9][0-9][0-9][0-9][0-9][0-9]' ) );

CREATE UNIQUE INDEX date_studenti__idx ON
    date_studenti (
        id_student
    ASC )
        LOGGING;

ALTER TABLE date_studenti ADD CONSTRAINT date_studenti_cnp_uk UNIQUE ( cnp );

ALTER TABLE date_studenti ADD CONSTRAINT date_studenti_seria_nr_ci_uk UNIQUE ( seria_ci,
                                                                               nr_ci );

CREATE TABLE dosare (
    id_dosar         NUMBER(4) NOT NULL,
    nr_avertismente  NUMBER(1) NOT NULL,
    nr_referate      NUMBER(1) NOT NULL,
    status           VARCHAR2(10) NOT NULL,
    id_student       NUMBER(4) NOT NULL
)
LOGGING;

ALTER TABLE dosare
    ADD CONSTRAINT dosare_nr_avertismente_ck CHECK ( nr_avertismente BETWEEN 0 AND 3 );

ALTER TABLE dosare
    ADD CONSTRAINT dosare_nr_referate_ck CHECK ( nr_referate BETWEEN 0 AND 3 );

ALTER TABLE dosare
    ADD CONSTRAINT dosare_status_ck CHECK ( status IN ( 'Cazat', 'Decazat' ) );

CREATE UNIQUE INDEX dosare__idx ON
    dosare (
        id_student
    ASC )
        LOGGING;

ALTER TABLE dosare ADD CONSTRAINT dosare_pk PRIMARY KEY ( id_dosar );

CREATE TABLE registre (
    id_registru  NUMBER(4) NOT NULL,
    octombrie    NUMBER(1) NOT NULL,
    noiembrie    NUMBER(1) NOT NULL,
    decembrie    NUMBER(1) NOT NULL,
    ianuarie     NUMBER(1) NOT NULL,
    februarie    NUMBER(1) NOT NULL,
    martie       NUMBER(1) NOT NULL,
    aprilie      NUMBER(1) NOT NULL,
    mai          NUMBER(1) NOT NULL,
    iunie        NUMBER(1) NOT NULL,
    iulie        NUMBER(1) NOT NULL,
    id_student   NUMBER(4) NOT NULL
)
LOGGING;

ALTER TABLE registre
    ADD CONSTRAINT registre_octombrie_ck CHECK ( octombrie IN ( 0, 1 ) );

ALTER TABLE registre
    ADD CONSTRAINT registre_noiembrie_ck CHECK ( noiembrie IN ( 0, 1 ) );

ALTER TABLE registre
    ADD CONSTRAINT registre_decembrie_ck CHECK ( decembrie IN ( 0, 1 ) );

ALTER TABLE registre
    ADD CONSTRAINT registre_ianuarie_ck CHECK ( ianuarie IN ( 0, 1 ) );

ALTER TABLE registre
    ADD CONSTRAINT registre_februarie_ck CHECK ( februarie IN ( 0, 1 ) );

ALTER TABLE registre
    ADD CONSTRAINT registre_martie_ck CHECK ( martie IN ( 0, 1 ) );

ALTER TABLE registre
    ADD CONSTRAINT registre_aprilie_ck CHECK ( aprilie IN ( 0, 1 ) );

ALTER TABLE registre
    ADD CONSTRAINT registre_mai_ck CHECK ( mai IN ( 0, 1 ) );

ALTER TABLE registre
    ADD CONSTRAINT registre_iunie_ck CHECK ( iunie IN ( 0, 1 ) );

ALTER TABLE registre
    ADD CONSTRAINT registre_iulie_ck CHECK ( iulie IN ( 0, 1 ) );

CREATE UNIQUE INDEX registre__idx ON
    registre (
        id_student
    ASC )
        LOGGING;

ALTER TABLE registre ADD CONSTRAINT registre_pk PRIMARY KEY ( id_registru );

CREATE TABLE studenti (
    id_student     NUMBER(4) NOT NULL,
    nume_student   VARCHAR2(30) NOT NULL,
    facultate      VARCHAR2(80) NOT NULL,
    an_studiu      VARCHAR2(15) NOT NULL,
    nr_telefon     CHAR(10) NOT NULL,
    adresa_email   VARCHAR2(50) NOT NULL,
    cont_banca     VARCHAR2(40) NOT NULL,
    data_cazare    DATE NOT NULL,
    data_decazare  DATE,
    id_camera      NUMBER(4) NOT NULL
)
LOGGING;

ALTER TABLE studenti
    ADD CONSTRAINT studenti_nume_student_ck CHECK ( REGEXP_LIKE ( nume_student,
                                                                  '^[a-zA-Z .''-]+$' ) );

ALTER TABLE studenti
    ADD CONSTRAINT studenti_facultate_ck CHECK ( facultate IN ( 'Facultatea de Arhitectur? "G. M. Cantacuzino"', 'Facultatea de Automatic? ?i Calculatoare',
                                                                'Facultatea de Construc?ii de Ma?ini ?i Management Industrial',
                                                                'Facultatea de Construc?ii ?i Instala?ii',
                                                                'Facultatea de Design Industrial ?i Managementul Afacerilor',
                                                                'Facultatea de Electronic?, Telecomunica?ii ?i Tehnologia Informa?iei',
                                                                'Facultatea de Inginerie Chimic? ?i Protec?ia Mediului "Cristofor Simonescu"',
                                                                'Facultatea de Inginerie Electric?, Energetic? ?i Informatic? Aplicat?',
                                                                'Facultatea de Mecanic?',
                                                                'Facultatea de ?tiin?a ?i Ingineria Materialelor' ) );

ALTER TABLE studenti
    ADD CONSTRAINT studenti_an_studiu_ck CHECK ( an_studiu IN ( 'Doctorat I', 'Doctorat II', 'Doctorat III', 'I', 'II',
                                                                'III', 'IV', 'Master I', 'Master II', 'V',
                                                                'VI' ) );

ALTER TABLE studenti
    ADD CONSTRAINT studenti_nr_telefon_ck CHECK ( REGEXP_LIKE ( nr_telefon,
                                                                '^(07[0-8]{1}[0-9]{1}|02[0-9]{2}|03[0-9]{2}){1}([0-9]{3}){2}$' ) );

ALTER TABLE studenti
    ADD CONSTRAINT studenti_adresa_email_ck CHECK ( REGEXP_LIKE ( adresa_email,
                                                                  '[a-z0-9._%-]+@[a-z0-9._%-]+\.[a-z]{2,4}' ) );

ALTER TABLE studenti
    ADD CONSTRAINT studenti_cont_banca_ck CHECK ( REGEXP_LIKE ( cont_banca,
                                                                '[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}' ) );

ALTER TABLE studenti ADD CONSTRAINT studenti_data_decazare_ck CHECK ( data_decazare > data_cazare );

ALTER TABLE studenti ADD CONSTRAINT studenti_pk PRIMARY KEY ( id_student );

ALTER TABLE studenti ADD CONSTRAINT studenti_adresa_email_uk UNIQUE ( adresa_email );

ALTER TABLE studenti ADD CONSTRAINT studenti_nr_telefon_uk UNIQUE ( nr_telefon );

ALTER TABLE studenti
    ADD CONSTRAINT camere_studenti_fk FOREIGN KEY ( id_camera )
        REFERENCES camere ( id_camera )
    NOT DEFERRABLE;

ALTER TABLE camere
    ADD CONSTRAINT camine_camere_fk FOREIGN KEY ( id_camin )
        REFERENCES camine ( id_camin )
    NOT DEFERRABLE;

ALTER TABLE camine
    ADD CONSTRAINT conducere_camine_fk FOREIGN KEY ( id_conducere )
        REFERENCES conducere ( id_conducere )
    NOT DEFERRABLE;

ALTER TABLE date_studenti
    ADD CONSTRAINT studenti_date_studenti_fk FOREIGN KEY ( id_student )
        REFERENCES studenti ( id_student )
    NOT DEFERRABLE;

ALTER TABLE dosare
    ADD CONSTRAINT studenti_dosare_fk FOREIGN KEY ( id_student )
        REFERENCES studenti ( id_student )
    NOT DEFERRABLE;

ALTER TABLE registre
    ADD CONSTRAINT studenti_registre_fk FOREIGN KEY ( id_student )
        REFERENCES studenti ( id_student )
    NOT DEFERRABLE;

CREATE OR REPLACE TRIGGER Trg_data_cazare_BRIU 
    BEFORE INSERT OR UPDATE ON Studenti 
    FOR EACH ROW 
BEGIN
	IF(:new.data_cazare < SYSDATE)
	THEN
		RAISE_APPLICATION_ERROR( .20001,
			'Data invalida: ' || TO_CHAR( :new.data_cazare, 'DD.MM.YYYY HH24:MI:SS') || ' trebuie sa fie mai mare decat data curenta.' );
	END IF;
END; 
/

CREATE OR REPLACE TRIGGER Trg_data_decazare_BRIU 
    BEFORE INSERT OR UPDATE ON Studenti 
    FOR EACH ROW 
BEGIN
	IF(:new.data_decazare < SYSDATE)
	THEN
		RAISE_APPLICATION_ERROR( .20001,
			'Data invalida: ' || TO_CHAR( :new.data_decazare, 'DD.MM.YYYY HH24:MI:SS') || ' trebuie sa fie mai mare decat data curenta.' );
	END IF;

END; 
/

CREATE SEQUENCE id_camera_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER id_camera_trg BEFORE
    INSERT ON camere
    FOR EACH ROW
    WHEN ( new.id_camera IS NULL )
BEGIN
    :new.id_camera := id_camera_seq.nextval;
END;
/

CREATE SEQUENCE id_camin_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER id_camin_trg BEFORE
    INSERT ON camine
    FOR EACH ROW
    WHEN ( new.id_camin IS NULL )
BEGIN
    :new.id_camin := id_camin_seq.nextval;
END;
/

CREATE SEQUENCE id_conducere_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER id_conducere_trg BEFORE
    INSERT ON conducere
    FOR EACH ROW
    WHEN ( new.id_conducere IS NULL )
BEGIN
    :new.id_conducere := id_conducere_seq.nextval;
END;
/

CREATE SEQUENCE id_dosar_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER id_dosar_trg BEFORE
    INSERT ON dosare
    FOR EACH ROW
    WHEN ( new.id_dosar IS NULL )
BEGIN
    :new.id_dosar := id_dosar_seq.nextval;
END;
/

CREATE SEQUENCE id_registru_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER id_registru_trg BEFORE
    INSERT ON registre
    FOR EACH ROW
    WHEN ( new.id_registru IS NULL )
BEGIN
    :new.id_registru := id_registru_seq.nextval;
END;
/

CREATE SEQUENCE id_student_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER id_student_trg BEFORE
    INSERT ON studenti
    FOR EACH ROW
    WHEN ( new.id_student IS NULL )
BEGIN
    :new.id_student := id_student_seq.nextval;
END;
/

commit work;

-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             7
-- CREATE INDEX                             4
-- ALTER TABLE                             54
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           8
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          6
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
